name: CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy flake8 black pytest pytest-cov pre-commit
        pip install -r requirements.txt
        pip install -e .

    - name: Lint with pre-commit
      run: |
        pre-commit run --all-files

    - name: Setup Docker and docker-compose
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build and run docker-compose
      run: |
        docker-compose build
        docker-compose up -d

    - name: Run get_raw_data.py script
      run: |
        python get_raw_data.py

    - name: Run unit tests and generate coverage report
      run: |
        pytest tests/unit --cov=my_module --cov-report=xml

    - name: Run integration tests
      run: |
        pytest tests/integration

    - name: Check dependencies for security vulnerabilities
      run: |
        pip install safety
        safety check || true

    - name: Publish code coverage
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
